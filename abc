// app.module.ts import { NgModule } from '@angular/core'; import { BrowserModule } from '@angular/platform-browser'; import { ReactiveFormsModule } from '@angular/forms'; import { HttpClientModule } from '@angular/common/http'; import { AppRoutingModule } from './app-routing.module'; import { AppComponent } from './app.component'; import { LoginComponent } from './login/login.component'; import { HomeComponent } from './home/home.component';

@NgModule({ declarations: [AppComponent, LoginComponent, HomeComponent], imports: [BrowserModule, ReactiveFormsModule, HttpClientModule, AppRoutingModule], providers: [], bootstrap: [AppComponent] }) export class AppModule {}

// app-routing.module.ts import { NgModule } from '@angular/core'; import { RouterModule, Routes } from '@angular/router'; import { LoginComponent } from './login/login.component'; import { HomeComponent } from './home/home.component';

const routes: Routes = [ { path: '', redirectTo: 'login', pathMatch: 'full' }, { path: 'login', component: LoginComponent }, { path: 'home', component: HomeComponent } ];

@NgModule({ imports: [RouterModule.forRoot(routes)], exports: [RouterModule] }) export class AppRoutingModule {}

// app.component.ts import { Component } from '@angular/core';

@Component({ selector: 'app-root', template: '<router-outlet></router-outlet>' }) export class AppComponent {}

// login.component.ts import { Component } from '@angular/core'; import { FormBuilder, Validators } from '@angular/forms'; import { Router } from '@angular/router'; import { HttpClient } from '@angular/common/http';

@Component({ selector: 'app-login', templateUrl: './login.component.html', styleUrls: ['./login.component.css'] }) export class LoginComponent { constructor(private fb: FormBuilder, private http: HttpClient, private router: Router) {}

loginForm = this.fb.group({ username: ['', Validators.required], password: ['', [Validators.required, Validators.minLength(6)]] });

onSubmit(): void { if (this.loginForm.valid) { this.http.post('http://localhost:8080/api/auth/login', this.loginForm.value, { responseType: 'text' }) .subscribe({ next: () => this.router.navigate(['/home']), error: () => alert('Invalid credentials') }); } } }

// login.component.html

<div class="login-container">
  <form [formGroup]="loginForm" (ngSubmit)="onSubmit()" class="glass-card">
    <h2>Login</h2><label for="username">Username</label>
<input id="username" formControlName="username" type="text" placeholder="Enter username" />
<div *ngIf="loginForm.get('username')?.invalid && loginForm.get('username')?.touched" class="error">
  Username is required.
</div>

<label for="password">Password</label>
<input id="password" formControlName="password" type="password" placeholder="Enter password" />
<div *ngIf="loginForm.get('password')?.invalid && loginForm.get('password')?.touched" class="error">
  Password must be at least 6 characters.
</div>

<button type="submit" [disabled]="loginForm.invalid">Login</button>

  </form>
</div>// login.component.css .login-container { height: 100vh; display: flex; justify-content: center; align-items: center; background: url('/assets/bg.jpg') no-repeat center center/cover; }

.glass-card { background: rgba(255, 255, 255, 0.1); border-radius: 15px; padding: 2rem; width: 320px; box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37); backdrop-filter: blur(10px); border: 1px solid rgba(255, 255, 255, 0.18); display: flex; flex-direction: column; }

h2 { text-align: center; margin-bottom: 1.5rem; color: #fff; }

label { color: #fff; margin-top: 1rem; }

input { padding: 0.5rem; margin-top: 0.3rem; border: none; border-radius: 8px; }

button { margin-top: 1.5rem; padding: 0.7rem; border: none; background: rgba(255, 255, 255, 0.3); color: #fff; border-radius: 8px; cursor: pointer; font-weight: bold; transition: background 0.3s ease; }

button:disabled { background: rgba(255, 255, 255, 0.2); cursor: not-allowed; }

.error { color: #ff8080; font-size: 0.8rem; }

// home.component.ts import { Component } from '@angular/core';

@Component({ selector: 'app-home', template: <div class="home-container"><h1>Welcome to Home Page</h1></div> }) export class HomeComponent {}

// home.component.css .home-container { padding: 2rem; color: white; text-align: center; background: #1f1f1f; height: 100vh; display: flex; align-items: center; justify-content: center; font-size: 2rem; }

