<div class="exchange-rate-container">
  <!-- Exchange Rate Add/Edit Form -->
  <form [formGroup]="addForm" (ngSubmit)="saveRate()" class="exchange-form">
    <mat-form-field appearance="fill">
      <mat-label>From Currency</mat-label>
      <input
        type="text"
        matInput
        formControlName="fromCurr"
        [matAutocomplete]="autoFrom"
      />
      <mat-autocomplete #autoFrom="matAutocomplete">
        <mat-option *ngFor="let currency of currencyList" [value]="currency">
          {{ currency }}
        </mat-option>
      </mat-autocomplete>
    </mat-form-field>

    <mat-form-field appearance="fill">
      <mat-label>To Currency</mat-label>
      <input
        type="text"
        matInput
        formControlName="toCurr"
        [matAutocomplete]="autoTo"
      />
      <mat-autocomplete #autoTo="matAutocomplete">
        <mat-option *ngFor="let currency of currencyList" [value]="currency">
          {{ currency }}
        </mat-option>
      </mat-autocomplete>
    </mat-form-field>

    <mat-form-field appearance="fill">
      <mat-label>Rate</mat-label>
      <input type="number" matInput formControlName="rate" />
    </mat-form-field>

    <mat-form-field appearance="fill">
      <mat-label>Last Modified</mat-label>
      <input matInput [matDatepicker]="picker" formControlName="lastMod" />
      <mat-datepicker-toggle matSuffix [for]="picker">
        <mat-icon matDatepickerToggleIcon>calendar_today</mat-icon>
      </mat-datepicker-toggle>
      <mat-datepicker #picker></mat-datepicker>
    </mat-form-field>

    <button mat-raised-button color="primary" type="submit">
      {{ isEditMode ? 'Update' : 'Add' }} Exchange Rate
    </button>
  </form>

  <!-- Exchange Rate Table -->
  <div class="exchange-table">
    <table mat-table [dataSource]="exchangeRates" class="mat-elevation-z8" multiTemplateDataRows>
      <ng-container matColumnDef="fromCurr">
        <th mat-header-cell *matHeaderCellDef>From</th>
        <td mat-cell *matCellDef="let row">{{ row.fromCurr }}</td>
      </ng-container>

      <ng-container matColumnDef="toCurr">
        <th mat-header-cell *matHeaderCellDef>To</th>
        <td mat-cell *matCellDef="let row">{{ row.toCurr }}</td>
      </ng-container>

      <ng-container matColumnDef="rate">
        <th mat-header-cell *matHeaderCellDef>Rate</th>
        <td mat-cell *matCellDef="let row">{{ row.rate }}</td>
      </ng-container>

      <ng-container matColumnDef="lastMod">
        <th mat-header-cell *matHeaderCellDef>Last Modified</th>
        <td mat-cell *matCellDef="let row">{{ row.lastMod | date }}</td>
      </ng-container>

      <ng-container matColumnDef="actions">
        <th mat-header-cell *matHeaderCellDef>Actions</th>
        <td mat-cell *matCellDef="let row; let i = index">
          <button mat-icon-button color="accent" (click)="editRate(i)">
            <mat-icon>edit</mat-icon>
          </button>
          <button mat-icon-button color="warn" (click)="deleteRate(i)">
            <mat-icon>delete</mat-icon>
          </button>
        </td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
      <tr mat-row *matRowDef="let row; columns: displayedColumns"></tr>
    </table>
  </div>
</div>