// discrepancy-review.component.ts import { Component } from '@angular/core'; import { CommonModule } from '@angular/common'; import { FormsModule } from '@angular/forms'; import { HttpClient, HttpClientModule } from '@angular/common/http';

@Component({ selector: 'app-discrepancy-review', standalone: true, imports: [CommonModule, FormsModule, HttpClientModule], templateUrl: './discrepancy-review.component.html', styleUrls: ['./discrepancy-review.component.css'] }) export class DiscrepancyReviewComponent { fileFO!: File; fileBO!: File; columnFO = ''; columnBO = ''; columnsFO: string[] = []; columnsBO: string[] = []; discrepancies: any[] = []; showResult = false; comment = '';

constructor(private http: HttpClient) {}

onFOFileChange(event: any) { this.fileFO = event.target.files[0]; this.extractHeaders(this.fileFO, 'FO'); }

onBOFileChange(event: any) { this.fileBO = event.target.files[0]; this.extractHeaders(this.fileBO, 'BO'); }

extractHeaders(file: File, type: 'FO' | 'BO') { const reader = new FileReader(); reader.onload = (e: any) => { const text = e.target.result; const lines = text.split('\n'); const headers = lines[0].split(',').map(h => h.trim()); if (type === 'FO') this.columnsFO = headers; else this.columnsBO = headers; }; reader.readAsText(file); }

checkDiscrepancies() { const formData = new FormData(); formData.append('file1', this.fileFO); formData.append('file2', this.fileBO); formData.append('column1', this.columnFO); formData.append('column2', this.columnBO);

this.http.post<any[]>('http://localhost:8080/api/discrepancy/compare', formData)
  .subscribe({
    next: (res) => {
      this.discrepancies = res;
      this.showResult = true;
    },
    error: (err) => {
      console.error('Error:', err);
    }
  });

} }






<div class="container">
  <div class="header">BNP PARIBAS Discrepancy Review</div>

  <div class="form-section">
    <label>Upload FO File:</label>
    <input type="file" (change)="onFOFileChange($event)" />

    <label>Upload BO File:</label>
    <input type="file" (change)="onBOFileChange($event)" />

    <label>Select FO Column:</label>
    <select [(ngModel)]="columnFO">
      <option *ngFor="let col of columnsFO" [value]="col">{{ col }}</option>
    </select>

    <label>Select BO Column:</label>
    <select [(ngModel)]="columnBO">
      <option *ngFor="let col of columnsBO" [value]="col">{{ col }}</option>
    </select>

    <button class="check-btn" (click)="checkDiscrepancies()">Check Discrepancies</button>
  </div>

  <div *ngIf="showResult" class="result-section">
    <table class="result-table">
      <thead>
        <tr>
          <th>Row</th>
          <th>FO Value</th>
          <th>BO Value</th>
          <th>Comment</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let row of discrepancies">
          <td>{{ row.row }}</td>
          <td>{{ row.foValue }}</td>
          <td>{{ row.boValue }}</td>
          <td><input type="text" [(ngModel)]="row.comment" placeholder="Add comment" /></td>
        </tr>
      </tbody>
    </table>
  </div>
</div>





.container {
  padding: 40px;
  font-family: 'Segoe UI', sans-serif;
}

.header {
  font-size: 28px;
  font-weight: bold;
  background-color: #007a33;
  color: white;
  padding: 15px;
  text-align: left;
  margin-bottom: 30px;
  border-radius: 5px 5px 0 0;
}

.form-section {
  display: flex;
  flex-direction: column;
  width: 400px;
  gap: 12px;
  background: #f5f5f5;
  padding: 25px;
  border-radius: 8px;
  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
  margin-bottom: 30px;
}

input[type="file"],
input[type="text"],
select {
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.check-btn {
  background-color: #007a33;
  color: white;
  border: none;
  padding: 10px;
  cursor: pointer;
  font-weight: bold;
  border-radius: 4px;
}

.result-section {
  max-height: 500px;
  overflow-y: auto;
  border: 1px solid #ccc;
  border-radius: 6px;
}

.result-table {
  width: 100%;
  border-collapse: collapse;
}

.result-table th,
.result-table td {
  border: 1px solid #ccc;
  padding: 10px;
  text-align: center;
}

.result-table th {
  background-color: #007a33;
  color: white;
}

.result-table input {
  width: 90%;
  padding: 6px;
  border: 1px solid #ccc;
  border-radius: 4px;
}