package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class DemoApplication {
    public static void main(String[] args) {
        SpringApplication.run(DemoApplication.class, args);
    }
}



package com.example.demo.controller;

import com.example.demo.service.DiscrepancyService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.io.IOException;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api/discrepancy")
@CrossOrigin(origins = "*")
public class DiscrepancyController {

    @Autowired
    private DiscrepancyService discrepancyService;

    @PostMapping("/compare")
    public ResponseEntity<List<Map<String, String>>> compareColumns(
            @RequestParam("file1") MultipartFile file1,
            @RequestParam("file2") MultipartFile file2,
            @RequestParam("column1") String column1,
            @RequestParam("column2") String column2
    ) throws IOException {
        List<Map<String, String>> discrepancies = discrepancyService.findDiscrepancies(file1, file2, column1, column2);
        return ResponseEntity.ok(discrepancies);
    }
}






package com.example.demo.service;

import org.springframework.web.multipart.MultipartFile;

import java.io.IOException;
import java.util.List;
import java.util.Map;

public interface DiscrepancyService {
    List<Map<String, String>> findDiscrepancies(MultipartFile file1, MultipartFile file2, String column1, String column2) throws IOException;
}





package com.example.demo.service.impl;

import com.example.demo.service.DiscrepancyService;
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.Reader;
import java.util.*;

@Service
public class DiscrepancyServiceImpl implements DiscrepancyService {

    @Override
    public List<Map<String, String>> findDiscrepancies(MultipartFile file1, MultipartFile file2, String column1, String column2) throws IOException {
        List<Map<String, String>> result = new ArrayList<>();

        try (
            Reader reader1 = new BufferedReader(new InputStreamReader(file1.getInputStream()));
            Reader reader2 = new BufferedReader(new InputStreamReader(file2.getInputStream()));

            CSVParser parser1 = CSVFormat.DEFAULT.withFirstRecordAsHeader().parse(reader1);
            CSVParser parser2 = CSVFormat.DEFAULT.withFirstRecordAsHeader().parse(reader2)
        ) {
            List<String> list1 = new ArrayList<>();
            for (CSVRecord record : parser1) {
                list1.add(record.get(column1).trim());
            }

            List<String> list2 = new ArrayList<>();
            for (CSVRecord record : parser2) {
                list2.add(record.get(column2).trim());
            }

            int max = Math.max(list1.size(), list2.size());

            for (int i = 0; i < max; i++) {
                String val1 = i < list1.size() ? list1.get(i) : "MISSING";
                String val2 = i < list2.size() ? list2.get(i) : "MISSING";

                if (!val1.equals(val2)) {
                    Map<String, String> map = new HashMap<>();
                    map.put("row", String.valueOf(i + 1));
                    map.put("foValue", val1);
                    map.put("boValue", val2);
                    result.add(map);
                }
            }
        }

        return result;
    }
}




