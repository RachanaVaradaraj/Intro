import { Component } from '@angular/core';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-exclusion-rule',
  templateUrl: './exclusion-rule.component.html',
  styleUrls: ['./exclusion-rule.component.css']
})
export class ExclusionRuleComponent {
  file1: File | null = null;
  file2: File | null = null;

  excludedRows: any[] = [];
  nonExcludedRows: any[] = [];
  excludedCount = 0;
  nonExcludedCount = 0;
  errorMessage = '';

  constructor(private http: HttpClient) {}

  onFileSelected(event: any, fileNumber: number): void {
    const file = event.target.files[0];
    if (fileNumber === 1) {
      this.file1 = file;
    } else {
      this.file2 = file;
    }
  }

  uploadFiles(): void {
    if (!this.file1 || !this.file2) {
      this.errorMessage = 'Please select both files.';
      return;
    }

    const formData = new FormData();
    formData.append('file1', this.file1);
    formData.append('file2', this.file2);

    this.http.post<any>('http://localhost:8080/api/reconcile', formData).subscribe({
      next: (response) => {
        this.excludedRows = response.excludedRows;
        this.nonExcludedRows = response.nonExcludedRows;
        this.excludedCount = response.excludedCount;
        this.nonExcludedCount = response.nonExcludedCount;
        this.errorMessage = '';
      },
      error: () => {
        this.errorMessage = 'An error occurred while uploading files.';
      }
    });
  }
}













<div class="container">
  <h2>Exclusion Rule Reconciliation</h2>

  <div class="upload-section">
    <label>Select File 1:</label>
    <input type="file" (change)="onFileSelected($event, 1)" />
    <label>Select File 2:</label>
    <input type="file" (change)="onFileSelected($event, 2)" />
    <button (click)="uploadFiles()">Upload & Reconcile</button>
  </div>

  <div *ngIf="errorMessage" class="error">{{ errorMessage }}</div>

  <div *ngIf="excludedRows.length || nonExcludedRows.length" class="results-section">
    <h3>Reconciliation Results</h3>
    <p>Excluded Count: {{ excludedCount }}</p>
    <p>Non-Excluded Count: {{ nonExcludedCount }}</p>

    <h4>Excluded Rows</h4>
    <table *ngIf="excludedRows.length > 0">
      <thead>
        <tr>
          <th *ngFor="let key of excludedRows[0] | keyvalue">{{ key.key }}</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let row of excludedRows">
          <td *ngFor="let cell of row | keyvalue">{{ cell.value }}</td>
        </tr>
      </tbody>
    </table>

    <h4>Non-Excluded Rows</h4>
    <table *ngIf="nonExcludedRows.length > 0">
      <thead>
        <tr>
          <th *ngFor="let key of nonExcludedRows[0] | keyvalue">{{ key.key }}</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let row of nonExcludedRows">
          <td *ngFor="let cell of row | keyvalue">{{ cell.value }}</td>
        </tr>
      </tbody>
    </table>
  </div>
</div>








.container {
  max-width: 900px;
  margin: auto;
  padding: 20px;
}

.upload-section {
  margin-bottom: 20px;
}

.upload-section label {
  display: block;
  margin-top: 10px;
}

button {
  margin-top: 10px;
}

table {
  width: 100%;
  border-collapse: collapse;
  margin-bottom: 20px;
}

thead {
  background-color: #f0f0f0;
}

th, td {
  border: 1px solid #ddd;
  padding: 8px;
}

.error {
  color: red;
  font-weight: bold;
}