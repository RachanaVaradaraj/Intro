package com.example.demo.service;

import java.util.List;
import java.util.Map;
import java.util.Set;

public interface DiscrepancyService {
    List<Map<String, Object>> getAllDocuments(String collectionName);
    Set<String> getAllFieldNames(String collectionName);
    List<Map<String, Object>> checkDiscrepancies(
        List<Map<String, Object>> dataA,
        List<Map<String, Object>> dataB,
        String columnName
    );
}




package com.example.demo.service.impl;

import com.example.demo.service.DiscrepancyService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.stereotype.Service;

import java.util.*;

@Service
public class DiscrepancyServiceImpl implements DiscrepancyService {

    @Autowired
    private MongoTemplate mongoTemplate;

    @Override
    public List<Map<String, Object>> getAllDocuments(String collectionName) {
        return mongoTemplate.findAll(Map.class, collectionName);
    }

    @Override
    public Set<String> getAllFieldNames(String collectionName) {
        List<Map<String, Object>> documents = getAllDocuments(collectionName);
        Set<String> fieldNames = new HashSet<>();
        for (Map<String, Object> doc : documents) {
            fieldNames.addAll(doc.keySet());
        }
        fieldNames.remove("_id");
        return fieldNames;
    }

    @Override
    public List<Map<String, Object>> checkDiscrepancies(List<Map<String, Object>> dataA, List<Map<String, Object>> dataB, String columnName) {
        List<Map<String, Object>> result = new ArrayList<>();
        int size = Math.min(dataA.size(), dataB.size());

        for (int i = 0; i < size; i++) {
            Object valA = dataA.get(i).get(columnName);
            Object valB = dataB.get(i).get(columnName);
            if (!Objects.equals(valA, valB)) {
                Map<String, Object> diff = new HashMap<>();
                diff.put("index", i);
                diff.put("INITIAL_MARGIN", valA);
                diff.put("Staralgonew", valB);
                result.add(diff);
            }
        }

        return result;
    }
}





package com.example.demo.controller;

import com.example.demo.service.DiscrepancyService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.*;

@RestController
@RequestMapping("/api/discrepancy")
@CrossOrigin(origins = "*")
public class DiscrepancyController {

    @Autowired
    private DiscrepancyService discrepancyService;

    @GetMapping("/fields/{collection}")
    public Set<String> getFieldNames(@PathVariable String collection) {
        return discrepancyService.getAllFieldNames(collection);
    }

    @GetMapping("/data/{collection}")
    public List<Map<String, Object>> getCollectionData(@PathVariable String collection) {
        return discrepancyService.getAllDocuments(collection);
    }

    @PostMapping("/check")
    public List<Map<String, Object>> checkDiscrepancy(
        @RequestParam String column,
        @RequestBody Map<String, List<Map<String, Object>>> dataMap
    ) {
        List<Map<String, Object>> dataA = dataMap.get("INITIAL_MARGIN");
        List<Map<String, Object>> dataB = dataMap.get("Staralgonew");
        return discrepancyService.checkDiscrepancies(dataA, dataB, column);
    }

    @GetMapping("/collections")
    public List<String> getCollectionNames() {
        return Arrays.asList("INITIAL_MARGIN", "Staralgonew");
    }
}



package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class DemoApplication {
    public static void main(String[] args) {
        SpringApplication.run(DemoApplication.class, args);
    }
}