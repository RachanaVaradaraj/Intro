import { Component, effect, signal } from '@angular/core';
import { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-login',
  standalone: true,
  imports: [CommonModule, ReactiveFormsModule],
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent {
  loginForm: FormGroup;
  slides = [
    {
      title: 'Online Documentation',
      description: 'Access complete docs on uploading and reconciling CSV files easily.'
    },
    {
      title: 'Reconciliation Process',
      description: 'Automatic matching of excluded and non-excluded rows across files.'
    },
    {
      title: 'Secure Access',
      description: 'Login credentials are encrypted and stored securely.'
    }
  ];
  activeSlide = signal(0);

  constructor(private fb: FormBuilder) {
    this.loginForm = this.fb.group({
      username: ['', Validators.required],
      password: ['', Validators.required]
    });

    setInterval(() => {
      this.activeSlide.update(value => (value + 1) % this.slides.length);
    }, 4000);
  }

  onSubmit(): void {
    if (this.loginForm.valid) {
      console.log('Login submitted:', this.loginForm.value);
      // Redirect or handle login
    }
  }
}





<div class="container-fluid vh-100 d-flex align-items-center justify-content-center glassmorphism">
  <div class="row w-100 shadow-lg rounded-5 overflow-hidden" style="max-width: 1000px; background: rgba(255, 255, 255, 0.1);">
    
    <!-- Carousel Section -->
    <div class="col-md-6 bg-dark text-white p-5 d-flex flex-column justify-content-center">
      <h3>{{ slides[activeSlide()]?.title }}</h3>
      <p class="mt-3">{{ slides[activeSlide()]?.description }}</p>
    </div>

    <!-- Login Form Section -->
    <div class="col-md-6 bg-white p-5 d-flex flex-column justify-content-center">
      <form [formGroup]="loginForm" (ngSubmit)="onSubmit()" novalidate>
        <h2 class="mb-4 text-center">Login</h2>
        <div class="mb-3">
          <label for="username" class="form-label">Username</label>
          <input id="username" formControlName="username" class="form-control" type="text" />
          <div *ngIf="loginForm.controls['username'].invalid && loginForm.controls['username'].touched" class="text-danger">
            Username is required
          </div>
        </div>

        <div class="mb-3">
          <label for="password" class="form-label">Password</label>
          <input id="password" formControlName="password" class="form-control" type="password" />
          <div *ngIf="loginForm.controls['password'].invalid && loginForm.controls['password'].touched" class="text-danger">
            Password is required
          </div>
        </div>

        <button type="submit" class="btn btn-primary w-100" [disabled]="loginForm.invalid">Login</button>
      </form>
    </div>
  </div>
</div>








body, html {
  height: 100%;
  margin: 0;
  font-family: 'Segoe UI', sans-serif;
  background: linear-gradient(120deg, #74ebd5 0%, #ACB6E5 100%);
}

.glassmorphism {
  backdrop-filter: blur(10px);
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 20px;
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
}