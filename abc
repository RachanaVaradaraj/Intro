Here is the complete exchange-rates.component.html file that matches your requirements and integrates properly with the edited TypeScript logic. It:

Uses Angular Material components (MatTable, MatDialog, etc.).

Shows a scrollable table.

Adds "Add" and "Edit" buttons that open the popup dialog.

Follows the FIS Data Integrity Manager UI layout style.



---

âœ… exchange-rates.component.html

<div class="container">
  <h2 class="header">Exchange Rate Management</h2>

  <div class="toolbar">
    <button mat-raised-button color="primary" (click)="openAddDialog()">
      <mat-icon>add</mat-icon> Add
    </button>
  </div>

  <div class="table-wrapper">
    <table mat-table [dataSource]="exchangeRates" class="mat-elevation-z8 full-width-table">

      <!-- From Currency Column -->
      <ng-container matColumnDef="fromCurr">
        <th mat-header-cell *matHeaderCellDef> From Currency </th>
        <td mat-cell *matCellDef="let element"> {{element.fromCurr}} </td>
      </ng-container>

      <!-- To Currency Column -->
      <ng-container matColumnDef="toCurr">
        <th mat-header-cell *matHeaderCellDef> To Currency </th>
        <td mat-cell *matCellDef="let element"> {{element.toCurr}} </td>
      </ng-container>

      <!-- Rate Column -->
      <ng-container matColumnDef="rate">
        <th mat-header-cell *matHeaderCellDef> Rate </th>
        <td mat-cell *matCellDef="let element"> {{element.rate}} </td>
      </ng-container>

      <!-- Last Modified Column -->
      <ng-container matColumnDef="lastMod">
        <th mat-header-cell *matHeaderCellDef> Last Modified </th>
        <td mat-cell *matCellDef="let element"> {{element.lastMod | date:'yyyy-MM-dd'}} </td>
      </ng-container>

      <!-- Actions Column -->
      <ng-container matColumnDef="actions">
        <th mat-header-cell *matHeaderCellDef> Actions </th>
        <td mat-cell *matCellDef="let element">
          <button mat-icon-button color="primary" (click)="openEditDialog(element)">
            <mat-icon>edit</mat-icon>
          </button>
        </td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef="['fromCurr', 'toCurr', 'rate', 'lastMod', 'actions']"></tr>
      <tr mat-row *matRowDef="let row; columns: ['fromCurr', 'toCurr', 'rate', 'lastMod', 'actions'];"></tr>
    </table>
  </div>
</div>


---

ðŸ§¾ Required CSS (exchange-rates.component.css)

To go with the above, hereâ€™s matching CSS to ensure layout and scrolling:

.container {
  padding: 20px;
}

.header {
  margin-bottom: 20px;
  font-size: 24px;
  font-weight: bold;
}

.toolbar {
  margin-bottom: 16px;
}

.table-wrapper {
  max-height: 400px;
  overflow-y: auto;
  border: 1px solid #ccc;
  border-radius: 8px;
}

.full-width-table {
  width: 100%;
}


---

âœ… Summary

openAddDialog() and openEditDialog(row) work as expected.

No missing templates or methods.

Fully scrollable, styled table.

Ready to connect to your backend.


Let me know if you want to add delete, filtering, or connect it to the Spring Boot backend.

