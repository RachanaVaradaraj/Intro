To ensure your sidebar opens when you click the menu icon in the header, you need a proper connection between header.component, app.component, and sidebar.component.

Here is the complete working solution with all necessary parts:


---

1. app.component.ts

This is the main controller of the sidebar state.

import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  sidebarCollapsed = false;

  toggleSidebar() {
    this.sidebarCollapsed = !this.sidebarCollapsed;
  }
}


---

2. app.component.html

Connect header and sidebar using @Output and [Input]:

<app-header (toggleSidebar)="toggleSidebar()"></app-header>
<div class="main-layout">
  <app-sidebar [isCollapsed]="sidebarCollapsed"></app-sidebar>
  <router-outlet></router-outlet>
</div>


---

3. header.component.ts

Emits the toggle event:

import { Component, Output, EventEmitter } from '@angular/core';

@Component({
  selector: 'app-header',
  templateUrl: './header.component.html',
  styleUrls: ['./header.component.css']
})
export class HeaderComponent {
  @Output() toggleSidebar = new EventEmitter<void>();
}


---

4. header.component.html

Your updated version with toggle:

<!-- Top bar: white background -->
<div class="top-bar">
  <img src="assets/LOGO.png" alt="Logo" class="logo" />
  <span class="app-title">Recon NextGen</span>
  <div class="spacer"></div>
  <span class="user-info">H700435 | Dockme</span>
</div>

<!-- Middle bar: dark teal strip -->
<div class="middle-bar"></div>

<!-- Bottom bar: icon section -->
<div class="bottom-bar">
  <button class="icon-btn" (click)="toggleSidebar.emit()">
    <span class="material-icons">menu</span>
  </button>
  <button class="icon-btn">
    <span class="material-icons">home</span>
  </button>
  <button class="icon-btn">
    <span class="material-icons">folder</span>
  </button>
  <button class="icon-btn">
    <span class="material-icons">search</span>
  </button>
</div>


---

5. sidebar.component.ts

import { Component, Input } from '@angular/core';

@Component({
  selector: 'app-sidebar',
  templateUrl: './sidebar.component.html',
  styleUrls: ['./sidebar.component.css']
})
export class SidebarComponent {
  @Input() isCollapsed = false;

  referenceDataExpanded = false;

  toggleReferenceData() {
    this.referenceDataExpanded = !this.referenceDataExpanded;
  }
}


---

6. sidebar.component.html (Important part)

Make sure you bind the class and visibility:

<div class="sidebar-container" [class.collapsed]="isCollapsed">
  <ul class="menu">
    <li>
      <mat-icon>apartment</mat-icon>
      <span>Manage Company</span>
    </li>
    <li>
      <mat-icon>description</mat-icon>
      <span>Recon Master</span>
    </li>
    <li>
      <mat-icon>category</mat-icon>
      <span>Context Type</span>
    </li>
    <li (click)="toggleReferenceData()" class="expandable">
      <mat-icon>inventory_2</mat-icon>
      <span>Reference Data</span>
      <mat-icon class="expand-icon">{{ referenceDataExpanded ? 'expand_less' : 'expand_more' }}</mat-icon>
      <ul class="submenu" *ngIf="referenceDataExpanded">
        <li>Accounting Period Groups</li>
        <li>Calendars</li>
        <li>Counterparties</li>
        <li>Currencies</li>
        <li>Exchange Rates</li>
        <li>Item Types</li>
        <li>Reason Codes</li>
        <li>Securities</li>
        <li>Tags</li>
      </ul>
    </li>
    <li>
      <mat-icon>search</mat-icon>
      <span>Audit</span>
    </li>
  </ul>
</div>


---

Final Note:

Now when you click the menu icon in the header, it will toggle the sidebar open and close properly via parent-child communication.

Let me know if you also want an animated collapse effect or a sliding sidebar.

