To achieve the design shown in your screenshot where the sidebar:

Uses the exact same blue background and styles,

Is completely collapsible (hiding even the icons),

Uses the existing menu button from the header,

Displays a dropdown for Reference Data containing Exchange Rates, and

Loads a table on clicking Exchange Rates,


Here's the complete updated code.


---

✅ sidebar.component.ts

Make the sidebar collapsible via a shared service or input from the header button:

import { Component, Input } from '@angular/core';

@Component({
  selector: 'app-sidebar',
  standalone: true,
  templateUrl: './sidebar.component.html',
  styleUrls: ['./sidebar.component.css'],
})
export class SidebarComponent {
  @Input() collapsed = false;
  showReferenceData = false;

  toggleReferenceData() {
    this.showReferenceData = !this.showReferenceData;
  }
}


---

✅ sidebar.component.html

<div class="sidebar" [class.collapsed]="collapsed">
  <ul class="menu">
    <li>Manage Company</li>
    <li>Recon Master</li>
    <li>Context Type</li>

    <li (click)="toggleReferenceData()">
      Reference Data
    </li>

    <ul *ngIf="showReferenceData" class="submenu">
      <li routerLink="/exchange-rates">Exchange Rates</li>
    </ul>
  </ul>
</div>


---

✅ sidebar.component.css

.sidebar {
  width: 240px;
  height: 100vh;
  background-color: #014c74;
  color: white;
  overflow: hidden;
  transition: width 0.3s ease;
}

.sidebar.collapsed {
  width: 0;
}

.menu {
  list-style: none;
  padding: 0;
  margin: 0;
}

.menu li {
  padding: 15px 20px;
  cursor: pointer;
  border-bottom: 1px solid #005b87;
}

.submenu {
  list-style: none;
  padding-left: 20px;
}

.submenu li {
  padding: 10px 0;
  font-size: 14px;
}


---

✅ header.component.ts (toggle sidebar from header)

import { Component, Output, EventEmitter } from '@angular/core';

@Component({
  selector: 'app-header',
  standalone: true,
  templateUrl: './header.component.html',
  styleUrls: ['./header.component.css'],
})
export class HeaderComponent {
  @Output() toggleSidebar = new EventEmitter<void>();

  onToggleSidebar() {
    this.toggleSidebar.emit();
  }
}


---

✅ header.component.html (keep your original, just hook into the toggle)

<button (click)="onToggleSidebar()">☰</button>
<!-- your existing header content -->


---

✅ layout.component.ts (or wherever header and sidebar are combined)

import { Component } from '@angular/core';

@Component({
  selector: 'app-layout',
  standalone: true,
  templateUrl: './layout.component.html',
})
export class LayoutComponent {
  isSidebarCollapsed = false;

  toggleSidebar() {
    this.isSidebarCollapsed = !this.isSidebarCollapsed;
  }
}


---

✅ layout.component.html

<app-header (toggleSidebar)="toggleSidebar()"></app-header>

<div class="layout">
  <app-sidebar [collapsed]="isSidebarCollapsed"></app-sidebar>
  <div class="main-content">
    <router-outlet></router-outlet>
  </div>
</div>


---

✅ exchange-rates.component.html

<table>
  <thead>
    <tr>
      <th>Currency</th>
      <th>Rate</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>USD</td>
      <td>1.00</td>
    </tr>
    <tr>
      <td>EUR</td>
      <td>0.85</td>
    </tr>
  </tbody>
</table>


---

Let me know if you'd like dropdown arrows/icons or a table fetched from an API.

