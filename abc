Great! Below is the complete working solution for your Angular 17 standalone component with the following features for the Add popup only:

‚úÖ Searchable dropdown
‚úÖ Sort toggle (Ascending ‚Üî Descending)
‚úÖ Custom dropdown height with scroll
‚úÖ Search icon next to the dropdown (for From/To Currency)


---

‚úÖ exchange-rate.component.ts

import { Component, OnInit } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { NgIf, NgFor } from '@angular/common';
import { NgSelectModule } from '@ng-select/ng-select';
import { MatDialogModule, MatDialog } from '@angular/material/dialog';
import { MatButtonModule } from '@angular/material/button';

@Component({
  selector: 'app-exchange-rate',
  standalone: true,
  imports: [
    CommonModule,
    FormsModule,
    NgIf,
    NgFor,
    NgSelectModule,
    MatDialogModule,
    MatButtonModule
  ],
  templateUrl: './exchange-rate.component.html',
  styleUrl: './exchange-rate.component.css'
})
export class ExchangeRateComponent implements OnInit {
  currencyList: string[] = [];
  isAscending: boolean = true;

  newExchangeRate = {
    fromCurr: '',
    toCurr: '',
    rate: 1,
    lastMod: new Date().toISOString().split('T')[0]
  };

  constructor(private http: HttpClient, public dialog: MatDialog) {}

  ngOnInit(): void {
    this.getCurrencyList();
  }

  getCurrencyList() {
    this.http.get<string[]>('http://localhost:8080/currencies').subscribe(data => {
      this.currencyList = data;
    });
  }

  toggleSort() {
    this.isAscending = !this.isAscending;
  }

  getSortedCurrencies(): string[] {
    return [...this.currencyList].sort((a, b) =>
      this.isAscending ? a.localeCompare(b) : b.localeCompare(a)
    );
  }

  openSearch(field: 'from' | 'to') {
    alert(`Search button clicked for ${field === 'from' ? 'From Currency' : 'To Currency'}`);
    // You can replace this with a custom MatDialog if needed
  }
}


---

‚úÖ exchange-rate.component.html (Add popup section)

<h3>Add Exchange Rate</h3>

<!-- SORT TOGGLE -->
<div style="margin-bottom: 10px;">
  <label style="margin-right: 10px;">Sort:</label>
  <button type="button" (click)="toggleSort()">
    {{ isAscending ? 'Sort Ascending ‚¨Ü' : 'Sort Descending ‚¨á' }}
  </button>
</div>

<!-- FROM CURRENCY -->
<div class="dropdown-field">
  <label>From Currency</label>
  <div class="dropdown-wrapper">
    <ng-select
      [items]="getSortedCurrencies()"
      bindLabel=""
      [(ngModel)]="newExchangeRate.fromCurr"
      [searchable]="true"
      [clearable]="true"
      placeholder="Select From Currency"
      [virtualScroll]="true"
      [maxHeight]="'200px'">
    </ng-select>
    <button class="search-btn" (click)="openSearch('from')" type="button">üîç</button>
  </div>
</div>

<!-- TO CURRENCY -->
<div class="dropdown-field">
  <label>To Currency</label>
  <div class="dropdown-wrapper">
    <ng-select
      [items]="getSortedCurrencies()"
      bindLabel=""
      [(ngModel)]="newExchangeRate.toCurr"
      [searchable]="true"
      [clearable]="true"
      placeholder="Select To Currency"
      [virtualScroll]="true"
      [maxHeight]="'200px'">
    </ng-select>
    <button class="search-btn" (click)="openSearch('to')" type="button">üîç</button>
  </div>
</div>

<!-- EXCHANGE RATE AND DATE -->
<div>
  <label>Exchange Rate</label>
  <input type="number" [(ngModel)]="newExchangeRate.rate" step="0.01" />
</div>

<div>
  <label>Effective Date</label>
  <input type="date" [(ngModel)]="newExchangeRate.lastMod" />
</div>

<!-- ACTION BUTTONS -->
<div>
  <button (click)="save()">Save</button>
  <button (click)="cancel()">Cancel</button>
</div>


---

‚úÖ exchange-rate.component.css

.dropdown-field {
  margin-bottom: 15px;
}

.dropdown-wrapper {
  display: flex;
  align-items: center;
}

ng-select {
  flex-grow: 1;
}

.search-btn {
  margin-left: 6px;
  padding: 6px 10px;
  border: none;
  background: #e0e0e0;
  cursor: pointer;
  border-radius: 4px;
  font-size: 16px;
}

.search-btn:hover {
  background-color: #c0c0c0;
}


---

‚úÖ Dependencies

Make sure you have:

npm install @ng-select/ng-select

And NgSelectModule must be in imports of the standalone component (as shown above).


---

Let me know if you‚Äôd like:

A custom search popup dialog

The same dropdown behavior in the Edit popup

Restricting currency values (e.g. from ‚â† to)


I'll help with that too.

