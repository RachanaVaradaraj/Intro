Thank you â€” since your logic and dropdown behavior must not change, and you only want the form to appear as a popup (visually) instead of inline, here is the correct and minimal change to your existing setup that only affects how it looks, not how it works.


---

âœ… Goal: Convert inline form to a visual popup without touching logic or dropdown code


---

âœ… Step-by-Step Minimal Code Changes

âœ… 1. Add basic popup styling to your form

In exchange-rates.component.html, wrap your <form> in a container div and conditionally show it with *ngIf when needed:

<!-- Popup backdrop -->
<div class="popup-backdrop" *ngIf="showPopup">
  <div class="popup-form">
    <form [formGroup]="form" (ngSubmit)="saveRate()">
      <label>From Currency:</label>
      <select formControlName="fromCurr" [attr.disabled]="editingId != null ? true : null">
        <option *ngFor="let curr of currencies" [value]="curr">{{ curr }}</option>
      </select>

      <label>To Currency:</label>
      <select formControlName="toCurr" [attr.disabled]="editingId != null ? true : null">
        <option *ngFor="let curr of currencies" [value]="curr">{{ curr }}</option>
      </select>

      <label>Rate:</label>
      <input formControlName="rate" placeholder="Rate" type="number" />

      <label>Last Modified:</label>
      <input formControlName="lastMod" type="date" placeholder="YYYY-MM-DD" [attr.disabled]="editingId != null ? true : null"/>

      <button type="submit">{{ editingId ? 'Update' : 'Add' }}</button>
      <button type="button" (click)="cancelEdit()">Cancel</button>
    </form>
  </div>
</div>

âœ… 2. Add showPopup control in component.ts

In your exchange-rates.component.ts, add:

showPopup: boolean = false;

openPopup(): void {
  this.editingId = null;
  this.form.reset();
  this.showPopup = true;
}

editRate(rate: any): void {
  this.editingId = rate.id;
  this.form.setValue({
    fromCurr: rate.fromCurr,
    toCurr: rate.toCurr,
    rate: rate.rate,
    lastMod: rate.lastMod
  });
  this.showPopup = true;
}

cancelEdit(): void {
  this.editingId = null;
  this.form.reset();
  this.showPopup = false;
}

âœ… 3. Add styling to exchange-rates.component.css

.popup-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.4);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.popup-form {
  background: white;
  padding: 20px;
  border-radius: 8px;
  width: 400px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.3);
}

âœ… 4. Update your Add button to use openPopup()

<button mat-raised-button color="primary" (click)="openPopup()">Add</button>


---

âœ… Result:

ðŸŸ¢ Your dropdowns, form controls, and logic remain unchanged.

ðŸŸ¢ Your form simply appears in a centered popup instead of inline.

ðŸŸ¢ No Angular Material MatDialog is used, so no logic is refactored.



---

Let me know if you want this version merged into your uploaded files and sent back to you.

