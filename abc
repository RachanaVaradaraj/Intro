import { Component, OnInit } from '@angular/core';
import { DiscrepancyReviewService } from './discrepancy-review.service';

@Component({
  selector: 'app-discrepancy-review',
  templateUrl: './discrepancy-review.component.html',
  styleUrls: ['./discrepancy-review.component.css']
})
export class DiscrepancyReviewComponent implements OnInit {

  columnsA: string[] = [];
  columnsB: string[] = [];
  selectedColumn: string = '';
  discrepancies: any[] = [];

  constructor(private reviewService: DiscrepancyReviewService) {}

  ngOnInit(): void {
    this.loadFieldNames();
  }

  loadFieldNames(): void {
    this.reviewService.getFieldNames('INITIAL_MARGIN').subscribe({
      next: (data: string[]) => this.columnsA = data,
      error: (err) => console.error('Error fetching INITIAL_MARGIN fields', err)
    });

    this.reviewService.getFieldNames('Staralgonew').subscribe({
      next: (data: string[]) => this.columnsB = data,
      error: (err) => console.error('Error fetching Staralgonew fields', err)
    });
  }

  compareDiscrepancy(): void {
    if (!this.selectedColumn) return;

    this.reviewService.getDocuments('INITIAL_MARGIN').subscribe({
      next: (dataA: any[]) => {
        this.reviewService.getDocuments('Staralgonew').subscribe({
          next: (dataB: any[]) => {
            this.reviewService.checkDiscrepancy(dataA, dataB, this.selectedColumn).subscribe({
              next: (result: any[]) => this.discrepancies = result,
              error: (err) => console.error('Error comparing data', err)
            });
          },
          error: (err) => console.error('Error loading Staralgonew docs', err)
        });
      },
      error: (err) => console.error('Error loading INITIAL_MARGIN docs', err)
    });
  }
}




import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({ providedIn: 'root' })
export class DiscrepancyReviewService {
  private baseUrl = 'http://localhost:8080/api/discrepancy';

  constructor(private http: HttpClient) {}

  getFieldNames(collection: string): Observable<string[]> {
    return this.http.get<string[]>(`${this.baseUrl}/fields/${collection}`);
  }

  getDocuments(collection: string): Observable<any[]> {
    return this.http.get<any[]>(`${this.baseUrl}/documents/${collection}`);
  }

  checkDiscrepancy(dataA: any[], dataB: any[], column: string): Observable<any[]> {
    const body = { dataA, dataB };
    return this.http.post<any[]>(`${this.baseUrl}/check?column=${column}`, body);
  }
}







<div class="container">
  <div class="card">
    <h2>Discrepancy Review</h2>

    <div class="form-group">
      <label for="column">Select Column to Compare:</label>
      <select id="column" [(ngModel)]="selectedColumn" class="dropdown">
        <option *ngFor="let col of columnsA" [value]="col">{{ col }}</option>
      </select>
    </div>

    <button class="btn" (click)="compareDiscrepancy()">Compare</button>

    <div class="table-wrapper" *ngIf="discrepancies.length > 0">
      <table>
        <thead>
          <tr>
            <th>#</th>
            <th>INITIAL_MARGIN</th>
            <th>Staralgonew</th>
          </tr>
        </thead>
        <tbody>
          <tr *ngFor="let d of discrepancies">
            <td>{{ d.index }}</td>
            <td>{{ d.INITIAL_MARGIN }}</td>
            <td>{{ d.Staralgonew }}</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>






