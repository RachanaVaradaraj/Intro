To resolve the "app-sidebar is not a known element" error and replicate the FIS-like layout from your screenshot exactly — including:

A reusable collapsible sidebar with icons (Home, Folder, Search),

A header with a logo (bnp-logo.gif as per your assets),

And using Angular 17 standalone components,


Here’s the complete and corrected setup based on your code structure:


---

✅ 1. Register Sidebar & Header in layout.component.ts

Update layout.component.ts to explicitly import the standalone sidebar and header:

import { Component } from '@angular/core';
import { SidebarComponent } from './sidebar/sidebar.component';
import { HeaderComponent } from './header/header.component';
import { RouterOutlet } from '@angular/router';

@Component({
  selector: 'app-layout',
  standalone: true,
  imports: [SidebarComponent, HeaderComponent, RouterOutlet],
  templateUrl: './layout.component.html',
  styleUrls: ['./layout.component.css']
})
export class LayoutComponent {
  isSidebarCollapsed = false;

  toggleSidebar(): void {
    this.isSidebarCollapsed = !this.isSidebarCollapsed;
  }
}


---

✅ 2. layout.component.html

<div class="layout-container">
  <app-sidebar [collapsed]="isSidebarCollapsed"></app-sidebar>
  <div class="main">
    <app-header (toggleSidebar)="toggleSidebar()"></app-header>
    <router-outlet></router-outlet>
  </div>
</div>


---

✅ 3. layout.component.css

.layout-container {
  display: flex;
  height: 100vh;
}

.main {
  flex: 1;
  display: flex;
  flex-direction: column;
}


---

✅ 4. sidebar.component.ts

import { Component, Input } from '@angular/core';

@Component({
  selector: 'app-sidebar',
  standalone: true,
  templateUrl: './sidebar.component.html',
  styleUrls: ['./sidebar.component.css']
})
export class SidebarComponent {
  @Input() collapsed = false;
}


---

✅ 5. sidebar.component.html

<div [class.collapsed]="collapsed" class="sidebar">
  <ul>
    <li><i class="material-icons">home</i> <span *ngIf="!collapsed">Home</span></li>
    <li><i class="material-icons">folder</i> <span *ngIf="!collapsed">Folder</span></li>
    <li><i class="material-icons">search</i> <span *ngIf="!collapsed">Search</span></li>
  </ul>
</div>


---

✅ 6. sidebar.component.css

.sidebar {
  background-color: #12344d;
  color: white;
  width: 220px;
  height: 100vh;
  transition: width 0.3s ease;
  padding-top: 10px;
}

.sidebar.collapsed {
  width: 60px;
}

.sidebar ul {
  list-style: none;
  padding: 0;
}

.sidebar li {
  padding: 15px;
  display: flex;
  align-items: center;
  cursor: pointer;
}

.sidebar i {
  font-size: 20px;
  margin-right: 10px;
}


---

✅ 7. header.component.ts

import { Component, EventEmitter, Output } from '@angular/core';

@Component({
  selector: 'app-header',
  standalone: true,
  templateUrl: './header.component.html',
  styleUrls: ['./header.component.css']
})
export class HeaderComponent {
  @Output() toggleSidebar = new EventEmitter<void>();
}


---

✅ 8. header.component.html

<header class="header">
  <button (click)="toggleSidebar.emit()" class="menu-btn">&#9776;</button>
  <img src="assets/bnp-logo.gif" alt="Logo" class="logo" />
  <span class="title">Data Integrity Manager</span>
</header>


---

✅ 9. header.component.css

.header {
  height: 60px;
  background: #007c91;
  color: white;
  display: flex;
  align-items: center;
  padding: 0 1rem;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.menu-btn {
  background: none;
  border: none;
  font-size: 24px;
  color: white;
  cursor: pointer;
}

.logo {
  height: 30px;
  margin: 0 10px;
}

.title {
  font-size: 18px;
  font-weight: bold;
}


---

✅ 10. Use Material Icons in index.html

In src/index.html, ensure you add:

<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">


---

✅ 11. Use Layout in app.component.ts

import { Component } from '@angular/core';
import { LayoutComponent } from './components/layout/layout.component';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [LayoutComponent],
  template: `<app-layout></app-layout>`,
})
export class AppComponent {}


---

With this setup:

app-sidebar will now be recognized correctly.

Sidebar is collapsible.

Header includes logo and toggle button.

Layout uses only standalone components, consistent with Angular 17 best practices.


Let me know if you’d like:

Routing for individual sidebar items

Active state highlighting

Dynamic icons or nested sidebar sections like in FIS


