To make the dropdowns (fromCurr and toCurr) searchable and sortable in your Angular 17 popup, you can enhance the existing mat-select dropdowns using Angular Material features along with filtering logic.


---

âœ… Step-by-Step Enhancement

1. Update HTML (exchange-rate.component.html)

Modify your dropdowns to include a search input inside the panel using mat-option and implement sorting:

<!-- FROM Currency Dropdown -->
<mat-form-field appearance="fill" class="full-width">
  <mat-label>From Currency</mat-label>
  <mat-select [(ngModel)]="popupData.fromCurr" panelClass="select-panel">
    <mat-option>
      <input matInput placeholder="Search..." [(ngModel)]="fromCurrFilter" (click)="$event.stopPropagation()" />
    </mat-option>
    <mat-option *ngFor="let currency of filteredFromCurrOptions" [value]="currency">
      {{ currency }}
    </mat-option>
  </mat-select>
</mat-form-field>

<!-- TO Currency Dropdown -->
<mat-form-field appearance="fill" class="full-width">
  <mat-label>To Currency</mat-label>
  <mat-select [(ngModel)]="popupData.toCurr" panelClass="select-panel">
    <mat-option>
      <input matInput placeholder="Search..." [(ngModel)]="toCurrFilter" (click)="$event.stopPropagation()" />
    </mat-option>
    <mat-option *ngFor="let currency of filteredToCurrOptions" [value]="currency">
      {{ currency }}
    </mat-option>
  </mat-select>
</mat-form-field>


---

2. Update Component TS (exchange-rate.component.ts)

Add filtering and sorting logic:

fromCurrOptions: string[] = [];
toCurrOptions: string[] = [];
fromCurrFilter: string = '';
toCurrFilter: string = [];

get filteredFromCurrOptions(): string[] {
  return this.fromCurrOptions
    .filter(curr => curr.toLowerCase().includes(this.fromCurrFilter.toLowerCase()))
    .sort();
}

get filteredToCurrOptions(): string[] {
  return this.toCurrOptions
    .filter(curr => curr.toLowerCase().includes(this.toCurrFilter.toLowerCase()))
    .sort();
}

Also, ensure you update fromCurrOptions and toCurrOptions after fetching them from the service:

this.exchangeRateService.getFromCurrencies().subscribe((data: string[]) => {
  this.fromCurrOptions = data;
});
this.exchangeRateService.getToCurrencies().subscribe((data: string[]) => {
  this.toCurrOptions = data;
});


---

3. Optional: CSS Styling (exchange-rate.component.css)

Style the input inside the dropdown panel:

.select-panel input {
  width: 100%;
  padding: 8px;
  box-sizing: border-box;
}


---

ðŸ§ª Result

Youâ€™ll now have:

A searchable input box at the top of each dropdown.

Dropdown options that are filtered as you type.

Currency values that are sorted alphabetically.



---

Would you like me to update your uploaded files and send them back with these changes applied?

