To ensure the "Update" button fills the form with the correct values and updates the table after editing, only the editRate() and saveRate() methods from your screenshots need modification.

Here are the updated versions of those functions:


---

✅ Updated editRate(rate: any) function

Ensure that you’re setting the form controls correctly using the value (for dropdowns), and properly assigning the values for fromCurr and toCurr.

editRate(rate: any) {
  this.editingId = rate.id;
  this.form.setValue({
    fromCurr: this.currencies.find(currency => currency.value === rate.fromCurr) || { value: rate.fromCurr, viewValue: rate.fromCurr },
    toCurr: this.currencies.find(currency => currency.value === rate.toCurr) || { value: rate.toCurr, viewValue: rate.toCurr },
    rate: rate.rate,
    lastMod: rate.lastMod
  });

  this.form.get('fromCurr')?.disable();
  this.form.get('toCurr')?.disable();
  this.form.get('lastMod')?.disable();
}


---

✅ Updated saveRate() function

This ensures that after a successful update, the values are reflected in the table by calling this.getRates() and canceling the edit mode.

saveRate() {
  if (this.form.invalid) {
    console.error('Form is invalid', this.form.errors);
    return;
  }

  const payload = {
    fromCurr: this.form.value.fromCurr?.value || this.form.value.fromCurr,
    toCurr: this.form.value.toCurr?.value || this.form.value.toCurr,
    rate: this.form.value.rate,
    lastMod: this.form.value.lastMod
  };

  console.log('Sending payload:', payload);

  if (this.editingId != null) {
    this.http.put(`http://localhost:8080/api/exchange-rates/${this.editingId}`, payload)
      .subscribe(() => {
        this.getRates();
        this.cancelEdit();
      }, (error: HttpErrorResponse) => {
        console.error('Error updating rate', error);
      });
  } else {
    this.http.post('http://localhost:8080/api/exchange-rates', payload)
      .subscribe(() => {
        this.getRates();
        this.form.get('fromCurr')?.enable();
        this.form.get('toCurr')?.enable();
        this.form.get('lastMod')?.enable();
      }, (error: HttpErrorResponse) => {
        console.error('Error adding rate', error);
      });
  }
}


---

These updates:

Fix dropdown value binding with fromCurr and toCurr.

Send the proper payload for both Add and Update.

Refresh the table after update.

Disable/enable the fields correctly.


Let me know if you also want to highlight the row after update or scroll to it.

