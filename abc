Thanks for the image. I can see your Spring Boot controller code, and it’s almost correct. Here's a corrected and cleaned-up version with improvements:


---

✅ Corrected ExchangeRateController.java

package com.example.recon_connect.controller;

import com.example.recon_connect.entity.ExchangeRate;
import com.example.recon_connect.repository.ExchangeRateRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.List;
import java.util.Optional;

@CrossOrigin(origins = "*") // Allow requests from Angular (adjust origin if needed)
@RestController
@RequestMapping("/api/exchange-rates")
public class ExchangeRateController {

    private final ExchangeRateRepository repository;

    @Autowired
    public ExchangeRateController(ExchangeRateRepository repository) {
        this.repository = repository;
    }

    @GetMapping
    public List<ExchangeRate> getAll() {
        return repository.findAll();
    }

    @GetMapping("/from-currencies")
    public List<String> getFromCurrencies() {
        return repository.findDistinctFromCurr();
    }

    @GetMapping("/to-currencies")
    public List<String> getToCurrencies() {
        return repository.findDistinctToCurr();
    }

    @PostMapping
    public ExchangeRate add(@RequestBody ExchangeRate rate) {
        return repository.save(rate);
    }

    @PutMapping("/{fromCurr}")
    public ExchangeRate update(@PathVariable String fromCurr, @RequestBody ExchangeRate rate) {
        Optional<ExchangeRate> existing = repository.findById(fromCurr);
        if (existing.isPresent()) {
            ExchangeRate existingRate = existing.get();
            existingRate.setFromCurr(rate.getFromCurr());
            existingRate.setToCurr(rate.getToCurr());
            existingRate.setRate(rate.getRate());
            existingRate.setLastMod(rate.getLastMod());
            return repository.save(existingRate);
        } else {
            throw new RuntimeException("Exchange rate not found for: " + fromCurr);
        }
    }

    @DeleteMapping("/{fromCurr}")
    public void delete(@PathVariable String fromCurr) {
        repository.deleteById(fromCurr);
    }
}


---

✅ Notes

✅ @RequestBody is now correctly added to add() and update() methods.

✅ @CrossOrigin(origins = "*") allows requests from Angular frontend.

✅ Endpoint paths follow REST naming conventions (/from-currencies, /to-currencies, /{fromCurr}).

✅ Exception handling can be improved later, but for now, throws a RuntimeException if the record isn't found.



---

✅ Next Steps

Make sure your Angular request matches the expected JSON format and that the Content-Type: application/json header is set.

Let me know if you want help validating your Angular service or request format!

